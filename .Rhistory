suppressMessages(library(tidyverse))
library(leaps)
library(glmnet)
library(MASS)
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
attach(CovidData)
CovidData
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
attach(CovidData)
CovidData
n <- length(PercentWearingMask)
Z <- sample(n,n/2)
reg <-
lm(
PercentWearingMask ~ Population + ApproximatePopulationDensity + cases + COVID_deaths + confirmed_cases + confirmed_deaths + PercentUnemployed + MedianHouseholdIncome + PercentAfricanAmerican + PercentHispanic + PercentAsianAmerican + PercentWhiteAmerican + PercentNativeAmericanAndAlaskaNative + PercentNativeHawaiianAndOtherPacificIslander + PercPeopleWithCollegeOrAssociateDegreePerYear + StatewideMaskRequirement + PercentMale + PercentFemale + PercAdultsWithLessThanHighSchoolDiploma + PercAdultsWithHighSchoolDiploma + PercAdultsWithSomeCollegeOrAssociateDegree + PercAdultsWithBachelorDegreeOrHigher,
data = CovidData
)
X <- model.matrix(reg)
summary(reg)
nrow(X)
LassoCV1 <-
cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 10, 0.001))
LassoCV1$lambda.min
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.000001))
LassoCV2$lambda.min
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.00001))
LassoCV2$lambda.min
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.00001))
LassoCV2$lambda.min
LASSO <- glmnet(X[Z,],
PercentWearingMask[Z],
alpha = 1,
lambda = LassoCV2$lambda.min)
predict(LASSO, type = "coefficients")
reg.fit <- regsubsets(
PercentWearingMask ~ Population + ApproximatePopulationDensity + cases + COVID_deaths + confirmed_cases + confirmed_deaths + PercentUnemployed + MedianHouseholdIncome + PercentAfricanAmerican + PercentHispanic + PercentAsianAmerican + PercentWhiteAmerican + PercentNativeAmericanAndAlaskaNative + PercentNativeHawaiianAndOtherPacificIslander + PercPeopleWithCollegeOrAssociateDegreePerYear + StatewideMaskRequirement + PercentMale + PercentFemale + PercAdultsWithLessThanHighSchoolDiploma + PercAdultsWithHighSchoolDiploma + PercAdultsWithSomeCollegeOrAssociateDegree + PercAdultsWithBachelorDegreeOrHigher,
data = CovidData
)
summary(reg.fit)
reg.fit <- regsubsets(
PercentWearingMask ~ Population + ApproximatePopulationDensity + cases + COVID_deaths + confirmed_cases + confirmed_deaths + PercentUnemployed + MedianHouseholdIncome + PercentAfricanAmerican + PercentHispanic + PercentAsianAmerican + PercentWhiteAmerican + PercentNativeAmericanAndAlaskaNative + PercentNativeHawaiianAndOtherPacificIslander + PercPeopleWithCollegeOrAssociateDegreePerYear + StatewideMaskRequirement + PercentMale + PercentFemale + PercAdultsWithLessThanHighSchoolDiploma + PercAdultsWithHighSchoolDiploma + PercAdultsWithSomeCollegeOrAssociateDegree + PercAdultsWithBachelorDegreeOrHigher,
data = CovidData
)
summary(reg.fit)
LASSO <- glmnet(X[Z,],
PercentWearingMask[Z],
alpha = 1,
lambda = LassoCV2$lambda.min)
predict(LASSO, type = "coefficients")
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.00001))
LassoCV2$lambda.min
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.00001))
LassoCV2$lambda.min
LASSO <- glmnet(X[Z,],
PercentWearingMask[Z],
alpha = 1,
lambda = LassoCV2$lambda.min)
predict(LASSO, type = "coefficients")
LASSO <- glmnet(X[Z,],
PercentWearingMask[Z],
alpha = 1,
lambda = LassoCV2$lambda.min)
predict(LASSO, type = "coefficients")
LASSO <- glmnet(X[Z,],
PercentWearingMask[Z],
alpha = 1,
lambda = LassoCV2$lambda.min)
predict(LASSO, type = "coefficients")
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.000001))
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.00001))
LassoCV2$lambda.min
knitr::opts_chunk$set(echo = TRUE)
library(glm)
#No libraries needed
#Load Data
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
attach(CovidData)
reg <-
lm(
PercentWearingMask ~ Population + ApproximatePopulationDensity + cases + COVID_deaths + confirmed_cases + confirmed_deaths + PercentUnemployed + MedianHouseholdIncome + PercentAfricanAmerican + PercentHispanic + PercentAsianAmerican + PercentWhiteAmerican + PercentNativeAmericanAndAlaskaNative + PercentNativeHawaiianAndOtherPacificIslander + PercPeopleWithCollegeOrAssociateDegreePerYear + StatewideMaskRequirement + PercentMale + PercentFemale + PercAdultsWithLessThanHighSchoolDiploma + PercAdultsWithHighSchoolDiploma + PercAdultsWithSomeCollegeOrAssociateDegree + PercAdultsWithBachelorDegreeOrHigher+per_dem2016+per_gop2016+per_gop2020+per_dem2020,
data = CovidData
)
X <- model.matrix(reg)
summary(reg)
nrow(X)
LassoCV1 <-
cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 10, 0.001))
LassoCV1$lambda.min
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.00001))
LassoCV2$lambda.min
LASSO <- glmnet(X[Z,],
PercentWearingMask[Z],
alpha = 1,
lambda = LassoCV2$lambda.min)
predict(LASSO, type = "coefficients")
LassoCV2 <- cv.glmnet(X[Z, ],
PercentWearingMask[Z],
alpha = 1,
lambda = seq(0, 0.1, 0.00001))
LassoCV2$lambda.min
LASSO <- glmnet(X[Z,],
PercentWearingMask[Z],
alpha = 1,
lambda = LassoCV2$lambda.min)
predict(LASSO, type = "coefficients")
#Load Data
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFilter = data.frame(CovidData$Population,CovidData$PercentUnemployed,CovidData$MedianHouseholdIncome,CovidData$PercentAfricanAmerican,CovidData$PercentHispanic,CovidData$PercentNativeAmericanAndAlaskaNative,CovidData$PercentNativeHawaiianAndOtherPacificIslander,CovidData$StatewideMaskRequirement,CovidData$PercAdultsWithSomeCollegeOrAssociateDegree,CovidData$PercAdultsWithBachelorDegreeOrHigher,CovidData$per_dem2016,CovidData$per_gop2016,CovidData$per_gop2020,per_dem2020)
#CREATE TRAINING AND TESTING SET
n = nrows(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrows(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = data.frame(CovidData$Population,CovidData$PercentUnemployed,CovidData$MedianHouseholdIncome,CovidData$PercentAfricanAmerican,CovidData$PercentHispanic,CovidData$PercentNativeAmericanAndAlaskaNative,CovidData$PercentNativeHawaiianAndOtherPacificIslander,CovidData$StatewideMaskRequirement,CovidData$PercAdultsWithSomeCollegeOrAssociateDegree,CovidData$PercAdultsWithBachelorDegreeOrHigher,CovidData$per_dem2016,CovidData$per_gop2016,CovidData$per_gop2020,per_dem2020)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
Z = sample(n,n/2)
covid.train = CovidDataFiltered[Z,]
covid.test = CovidDataFiltered[-Z,]
###Train Logistic Regression Model
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered)
###Train Logistic Regression Model
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = binonmial)
###Train Logistic Regression Model
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binonmial")
###Train Logistic Regression Model
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binomial")
###Train Logistic Regression Model
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type="response")
###Train Logistic Regression Model
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type="response")
print(covid.test.predict)
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type = "response")
Yhat = (Prob > k/100 )
TPR[k] = sum( Yhat==1 & Diagnosis==1 ) / sum( Diagnosis == 1 )
FPR[k] = sum( Yhat==1 & Diagnosis==0 ) / sum( Diagnosis == 0 )
}
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type = "response")
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & Diagnosis==1 ) / sum( Diagnosis == 1 )
FPR[k] = sum( Yhat==1 & Diagnosis==0 ) / sum( Diagnosis == 0 )
}
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = data.frame(CovidData$Population,CovidData$PercentUnemployed,CovidData$MedianHouseholdIncome,CovidData$PercentAfricanAmerican,CovidData$PercentHispanic,CovidData$PercentNativeAmericanAndAlaskaNative,CovidData$PercentNativeHawaiianAndOtherPacificIslander,CovidData$StatewideMaskRequirement,CovidData$PercAdultsWithSomeCollegeOrAssociateDegree,CovidData$PercAdultsWithBachelorDegreeOrHigher,CovidData$per_dem2016,CovidData$per_gop2016,CovidData$per_gop2020,per_dem2020)
attach(CovidDataFiltered)
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type = "response")
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & PercentWearingMask==1 ) / sum(PercentWearingMask == 1 )
FPR[k] = sum( Yhat==1 & PercentWearingMask==0 ) / sum( PercentWearingMask == 0 )
}
plot(FPR, TPR, xlab="False positive rate", ylab="True positive rate", main="ROC curve")
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(PercentWearingMask~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type = "response")
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & PercentWearingMask>=0.5 ) / sum(PercentWearingMask>=0.5 )
FPR[k] = sum( Yhat==1 & PercentWearingMask<0.5 ) / sum( PercentWearingMask <0.5 )
}
plot(FPR, TPR, xlab="False positive rate", ylab="True positive rate", main="ROC curve")
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = data.frame(CovidData$WearingMaskCategory,CovidData$Population,CovidData$PercentUnemployed,CovidData$MedianHouseholdIncome,CovidData$PercentAfricanAmerican,CovidData$PercentHispanic,CovidData$PercentNativeAmericanAndAlaskaNative,CovidData$PercentNativeHawaiianAndOtherPacificIslander,CovidData$StatewideMaskRequirement,CovidData$PercAdultsWithSomeCollegeOrAssociateDegree,CovidData$PercAdultsWithBachelorDegreeOrHigher,CovidData$per_dem2016,CovidData$per_gop2016,CovidData$per_gop2020,per_dem2020)
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = data.frame(CovidData$WearingMaskCategory,CovidData$Population,CovidData$PercentUnemployed,CovidData$MedianHouseholdIncome,CovidData$PercentAfricanAmerican,CovidData$PercentHispanic,CovidData$PercentNativeAmericanAndAlaskaNative,CovidData$PercentNativeHawaiianAndOtherPacificIslander,CovidData$StatewideMaskRequirement,CovidData$PercAdultsWithSomeCollegeOrAssociateDegree,CovidData$PercAdultsWithBachelorDegreeOrHigher,CovidData$per_dem2016,CovidData$per_gop2016,CovidData$per_gop2020,per_dem2020)
attach(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrows(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
Z = sample(n,n/2)
covid.train = CovidDataFiltered[Z,]
covid.test = CovidDataFiltered[-Z,]
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = data.frame(CovidData$MaskWearingCategory,CovidData$Population,CovidData$PercentUnemployed,CovidData$MedianHouseholdIncome,CovidData$PercentAfricanAmerican,CovidData$PercentHispanic,CovidData$PercentNativeAmericanAndAlaskaNative,CovidData$PercentNativeHawaiianAndOtherPacificIslander,CovidData$StatewideMaskRequirement,CovidData$PercAdultsWithSomeCollegeOrAssociateDegree,CovidData$PercAdultsWithBachelorDegreeOrHigher,CovidData$per_dem2016,CovidData$per_gop2016,CovidData$per_gop2020,per_dem2020)
attach(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
Z = sample(n,n/2)
covid.train = CovidDataFiltered[Z,]
covid.test = CovidDataFiltered[-Z,]
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(WearingMask~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type = "response")
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & PercentWearingMask>=0.5 ) / sum(PercentWearingMask>=0.5 )
FPR[k] = sum( Yhat==1 & PercentWearingMask<0.5 ) / sum( PercentWearingMask <0.5 )
}
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test,type = "response")
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & PercentWearingMask>=0.5 ) / sum(PercentWearingMask>=0.5 )
FPR[k] = sum( Yhat==1 & PercentWearingMask<0.5 ) / sum( PercentWearingMask <0.5 )
}
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
}
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include MaskWearingCategory ,Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = dataB <- dataA[, c("MaskWearingCategory", "Population", "Population")]
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include MaskWearingCategory ,Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, #PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, #StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, #PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = CovidData[, c("MaskWearingCategory", "Population", "Population")]
attach(CovidDataFiltered)
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include MaskWearingCategory,Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = CovidData[, c("MaskWearingCategory", "Population", "Population","PercentUnemployed","MedianHouseholdIncome","PercentAfricanAmerican","PercentHispanic", "PercentNativeAmericanAndAlaskaNative","PercentNativeHawaiianAndOtherPacificIslander","StatewideMaskRequirement","PercAdultsWithSomeCollegeOrAssociateDegree","PercAdultsWithBachelorDegreeOrHigher","per_dem2016","per_gop2016","per_gop2020","per_dem2020",)]
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include MaskWearingCategory,Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = CovidData[, c("MaskWearingCategory", "Population", "Population","PercentUnemployed","MedianHouseholdIncome","PercentAfricanAmerican","PercentHispanic", "PercentNativeAmericanAndAlaskaNative","PercentNativeHawaiianAndOtherPacificIslander","StatewideMaskRequirement","PercAdultsWithSomeCollegeOrAssociateDegree","PercAdultsWithBachelorDegreeOrHigher","per_dem2016","per_gop2016","per_gop2020","per_dem2020")]
attach(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
Z = sample(n,n/2)
covid.train = CovidDataFiltered[Z,]
covid.test = CovidDataFiltered[-Z,]
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
}
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict( fit, data.frame(Depr1[-Z,]), type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include MaskWearingCategory,Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = CovidData[, c("MaskWearingCategory","Population","PercentUnemployed","MedianHouseholdIncome","PercentAfricanAmerican","PercentHispanic", "PercentNativeAmericanAndAlaskaNative","PercentNativeHawaiianAndOtherPacificIslander","StatewideMaskRequirement","PercAdultsWithSomeCollegeOrAssociateDegree","PercAdultsWithBachelorDegreeOrHigher","per_dem2016","per_gop2016","per_gop2020","per_dem2020")]
attach(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
Z = sample(n,n/2)
covid.train = CovidDataFiltered[Z,]
covid.test = CovidDataFiltered[-Z,]
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict( fit, data.frame(Depr1[-Z,]), type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm, data.frame(Depr1[-Z,]), type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test, type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
plot(FPR, TPR, xlab="False positive rate", ylab="True positive rate", main="ROC curve")
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test, type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
plot(FPR, TPR, xlab="False positive rate", ylab="True positive rate", main="ROC curve")
lines(FPR, TPR)
knitr::opts_chunk$set(echo = TRUE)
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include MaskWearingCategory,Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = CovidData[, c("MaskWearingCategory","Population","PercentUnemployed","MedianHouseholdIncome","PercentAfricanAmerican","PercentHispanic", "PercentNativeAmericanAndAlaskaNative","PercentNativeHawaiianAndOtherPacificIslander","StatewideMaskRequirement","PercAdultsWithSomeCollegeOrAssociateDegree","PercAdultsWithBachelorDegreeOrHigher","per_dem2016","per_gop2016","per_gop2020","per_dem2020")]
attach(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
Z = sample(n,n/2)
covid.train = CovidDataFiltered[Z,]
covid.test = CovidDataFiltered[-Z,]
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test, type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(as.factor(MaskWearingCategory)~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test, type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
plot(FPR, TPR, xlab="False positive rate", ylab="True positive rate", main="ROC curve")
#LOAD DATA
CovidData <- read_csv("./data/CovidDataSetFinal.csv")
CovidData = na.omit(CovidData)
##Points used include MaskWearingCategory,Population, PercentUnemployed, MedianHouseholdIncome, PercentAfricanAmerican, PercentHispanic PercentNativeAmericanAndAlaskaNative, PercentNativeHawaiianAndOtherPacificIslander, StatewideMaskRequirement(yes), PercAdultsWithSomeCollegeOrAssociateDegree, PercAdultsWithBachelorDegreeOrHigher,per_dem2016,per_gop2016,per_gop2020,per_dem2020,per_dem2016,per_gop2016,per_gop2020,per_dem2020
CovidDataFiltered = CovidData[, c("MaskWearingCategory","Population","PercentUnemployed","MedianHouseholdIncome","PercentAfricanAmerican","PercentHispanic", "PercentNativeAmericanAndAlaskaNative","PercentNativeHawaiianAndOtherPacificIslander","StatewideMaskRequirement","PercAdultsWithSomeCollegeOrAssociateDegree","PercAdultsWithBachelorDegreeOrHigher","per_dem2016","per_gop2016","per_gop2020","per_dem2020")]
attach(CovidDataFiltered)
#CREATE TRAINING AND TESTING SET
n = nrow(CovidDataFiltered)
Z = sample(n,n/2)
covid.train = CovidDataFiltered[Z,]
covid.test = CovidDataFiltered[-Z,]
###Chose best threshold for logistic regression
TPR = rep(0,100)
FPR = rep(0,100)
for(k in 1:100){
covid.train.glm = glm(MaskWearingCategory~.,data = CovidDataFiltered,family = "binomial")
covid.test.predict = predict(covid.train.glm,covid.test, type="response" )
Yhat = (covid.test.predict > k/100 )
TPR[k] = sum( Yhat==1 & MaskWearingCategory==1 ) / sum( MaskWearingCategory == 1 )
FPR[k] = sum( Yhat==1 & MaskWearingCategory==0 ) / sum( MaskWearingCategory == 0 )
}
plot(FPR, TPR, xlab="False positive rate", ylab="True positive rate", main="ROC curve")
lines(FPR, TPR)
##################Predict now that best threshold is selected of 0.83
covid.test.predict = predict( covid.train.glm, data.frame(Depr.testing), type="response" )
##################Predict now that best threshold is selected of 0.83
covid.test.predict = predict( covid.train.glm, covid.test, type="response" )
CorrectPredict = 1*( Prob > 0.83 )
##################Predict now that best threshold is selected of 0.83
covid.test.predict = predict( covid.train.glm, covid.test, type="response" )
CorrectPredict = 1*( covid.test.predict > 0.83 )
table(CorrectPredict,covid.test$MaskWearingCategory)
